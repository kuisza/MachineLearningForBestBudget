# -*- coding: utf-8 -*-
"""
Created on Wed Apr  5 12:35:34 2017

@author: bedaa
"""

# Determining the best starting budget

# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# Importing the dataset
dataset = pd.read_csv('result1.csv')
X = dataset.iloc[:, 0:1].values
y = dataset.iloc[:, 1].values

# Splitting the dataset into the Training set and Test set
from sklearn.cross_validation import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

# Feature Scaling
"""from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.transform(X_test)
sc_y = StandardScaler()
y_train = sc_y.fit_transform(y_train)"""

#Importing Linear Regression model to the dataset
from sklearn.linear_model import LinearRegression

                            
#Fitting Polynomial Regression to the dataset
from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree = 100)
X_poly = poly_reg.fit_transform(X)
lin_reg2 = LinearRegression()
lin_reg2.fit(X_poly, y)


#Visualising the Polynomial Regression results
plt.scatter(X, y, color = 'red')
plt.plot(X, lin_reg2.predict(poly_reg.fit_transform(X)), color = 'blue')

#Visualising the Polynomial Regression results
X_grid = np.arange(min(X), max(X), 1)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(X, y, color = 'red')
plt.plot(X_grid, lin_reg2.predict(poly_reg.fit_transform(X_grid)), color = 'blue')
plt.title('How much money was reached')
plt.xlabel('Starting budget')
plt.ylabel('Maximum budget')
plt.show()

#Predicting a new result wiht Polynomial Regression
lin_reg2.predict(poly_reg.fit_transform(495))
lin_reg2.predict(poly_reg.fit_transform(496))
lin_reg2.predict(poly_reg.fit_transform(497))
lin_reg2.predict(poly_reg.fit_transform(498))
lin_reg2.predict(poly_reg.fit_transform(499))
lin_reg2.predict(poly_reg.fit_transform(500))
y_pred = lin_reg2.predict(poly_reg.fit_transform(X_grid))
